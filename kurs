import asyncio
import requests

from hikkatl import types
from telethon import functions, events

from .. import loader, utils

@loader.unrestricted
async def btccmd(self, message: types.Message):
    """Получает текущий курс биткоина"""
    currency = utils.get_args_raw(message)

    if currency == "rub":
        url = 'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=rub'
    elif currency == "usd":
        url = 'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd'
    else:
        text = "<b>Неверный формат валюты, используйте rub или usd</b>"
        await utils.answer(message, text)
        return

    try:
        response = requests.get(url)
        data = response.json()

        if 'bitcoin' in data:
            if currency == "rub":
                course = data['bitcoin']['rub']
                text = f"<b>На данный момент, курс 1 BTC составляет </b><code>{course}₽</code>"
            elif currency == "usd":
                course = data['bitcoin']['usd']
                text = f"<b>На данный момент, курс 1 BTC составляет </b><code>{course}$</code>"
            else:
                text = "<b>Неверный формат валюты, используйте rub или usd</b>"
        else:
            text = "<b>Не удалось получить данные о курсе биткоина</b>"
    except Exception as e:
        text = f"<b>Произошла ошибка при получении курса биткоина: {e}</b>"

    await utils.answer(message, text)
